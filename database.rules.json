{
  "rules": {
    "users": {
      "$user_id": {
        ".read": "auth != null && auth.provider !== 'anonymous'",
        ".write": "auth != null && auth.uid === $user_id && auth.provider !== 'anonymous'",
        ".validate": "newData.hasChildren(['phone', 'postalcode'])"
      }
    },
    "books": {
      ".read": "true",
      ".indexOn": [
        "score",
        "modality"
      ],
      "$book_id": {
        ".write": "auth != null && auth.provider !== 'anonymous'",
        ".validate": "newData.hasChildren(['title','description','author','date', 'score', 'image', 'publisher'])",
        "offers": {
          "$offer_id": {
            ".validate": "newData.hasChildren(['author', 'modality', 'exchange']) && newData.child('author').val() == auth.uid"
          }
        }
      }
    },
    "transactions": {
      ".indexOn": [
        "from",
        "to",
        "product",
        "modality"
      ],
      ".read": "auth != null && auth.provider !== 'anonymous'",
      ".write": "auth != null && (auth.uid == data.child('from').val() || auth.uid == data.child('to').val()) && auth.provider !== 'anonymous'",
      "$transaction_id": {
        ".validate": "newData.hasChildren(['from', 'to', 'beginAt', 'endAt', 'product', 'modality', 'exchange'])"
      }
    },
    "auctions": {
      ".indexOn": [
        "product"
      ],
      "$auction_id": {
        ".read": "auth != null",
        ".write": "auth != null && data.child('author').val() == auth.uid",
        ".validate": "newData.hasChildren(['author', 'createdAt', 'due', 'product'])",
        "bids": {
          "$author_id": {
            ".read": "auth.provider !== 'anonymous'",
            ".write": "auth != null",
            ".validate": "newData.hasChildren(['value', 'at'])"
          }
        }
      }
    }
  }
}
